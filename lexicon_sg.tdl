;;;Verbs;;;

;;Transitive;;

agak_v1 := v_np*_le & singlish_le & 
"""
to estimate
<ex> agak the water enough or not.
"""
 [ ORTH < "agak" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_agak_v_1_rel",
            PHON.ONSET con ],
   DIALECT sgp ].
   
;agak-agak_v1 := v_np*_le & singlish_le & 
;"""
;to estimate (same as agak)
;<ex> I just agak agak only.
;"""
; [ ORTH < "agak","agak" >,
;   SYNSEM [ LKEYS.KEYREL.PRED "_agak_v_1_rel",
;            PHON.ONSET con ],
;   DIALECT sgp ].

arrow_v1 := v_np_le & singlish_le & 
"""
to 'nominate' someone, usually negative
"""
 [ ORTH < "arrow" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_arrow_v_1_rel",
            PHON.ONSET con ],
   DIALECT sgp ].

sabo_v1 := v_np_le & singlish_le & 
"""
short for sabotage
"""
 [ ORTH < "sabo" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sabo_v_1_rel",
            PHON.ONSET con ]
     ].

kacau_v1 := v_np_le & singlish_le & 
"""
to disturb
"""
 [ ORTH < "kacau" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kacau_v_1_rel",
            PHON.ONSET con ] ].
            
; preliminary version... maybe make it passive in the future             
kena_v1 := v_np_le & singlish_le & 
"""
to be struck by or receive something unpleasant
<ex> They kena bad luck.
"""
 [ ORTH < "kena" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kena_v_1_rel",
            PHON.ONSET con ] ].               
            
kena_prd_va_v1 := v_prd_seq-va_le & singlish_le & 
"""
to be struck by or receive something unpleasant
<ex> They kena scolded.
'They got scolded'
"""
 [ ORTH < "kena" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kena_v_state_rel",
            PHON.ONSET con ] ].                        

tahan_v1 := v_np*_le & singlish_le & 
"""
to tolerate someone/something
very commonly used with the negator 'buay'
<ex> I really buay tahan that person.
'I really cannot stand that person'
"""
 [ ORTH < "tahan" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tahan_v_1_rel",
            PHON.ONSET con ],
   DIALECT sgp ].
               
;go_vsing := v_np_dir_le &
; [ ORTH < "go" >,
;   SYNSEM [ LKEYS.KEYREL.PRED "_go_v_1_rel",
;            PHON.ONSET con ] ].
            
;;;Adverbials;;;

kaypoh_a1 := aj_-_i_le &
"""
Busybody, used a bit like a verb also
<ex> He always kaypoh one.
<ex> Don't kaypoh so much.
"""
 [ ORTH < "kaypoh" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kaypo_a_1_rel",
            PHON.ONSET con ] ].

siao_a1 := aj_-_i_le &
"""
meaning crazy
"""
 [ ORTH < "siao" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_crazy_a_1_rel",
            PHON.ONSET con ] ].
            
atas_a1 := aj_-_i_le &
"""
literally means high
used to describe someone/thing sophisticated, or of a high class
also used to mean snobbish
"""
 [ ORTH < "atas" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_atas_a_1_rel",
            PHON.ONSET con ] ].
            
goondu_a1 := aj_-_i_le &
"""
originally fat (tamil) or hard (malay)
used to describe someone as stupid
"""
 [ ORTH < "goondu" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stupid_a_1_rel",
            PHON.ONSET con ] ].
            
botak_a1 := aj_-_i_le &
"""
bald
"""
 [ ORTH < "botak" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bald_a_1_rel",
            PHON.ONSET con ] ].


agak_adv := av_-_i-vp_le &
"""
roughly
<ex>I agak understand lah
"""
 [ ORTH < "agak" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_agak_a_1_rel",
            PHON.ONSET con ] ].

;already_prf_adv := av_-_already-prf_le &
; [ ORTH < "already" >,
;   SYNSEM [ LKEYS.KEYREL.PRED "_already_a_2_rel",
;            PHON.ONSET con ] ].

; 11-8-2021 add in a completive already
already_compl_sfa := sf_adverb_compl_le &
 [ ORTH < "already" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_already_sfa_compl_rel",
            PHON.ONSET con ] ].
            
already_incep_sfa := sf_adverb_incep_le &
 [ ORTH < "already" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_already_sfa_incep_rel",
            PHON.ONSET con ] ].            

already_incho_sfa := sf_adverb_incho_le &
 [ ORTH < "already" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_already_sfa_incho_rel",
            PHON.ONSET con ] ].

;already_incho_adv := av_-_already-incho_le &
; [ ORTH < "already" >,
;   SYNSEM [ LKEYS.KEYREL.PRED "_already_a_3_rel",
;            PHON.ONSET con ] ].

ever_exp_adv := av_-_ever-exp_le &
 [ ORTH < "ever" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ever_a_1_rel",
            PHON.ONSET con ] ].

not_prdp-sg := av_-_s-not-sg_le &
 [ ORTH < "not" >,
   SYNSEM [ LKEYS.KEYREL.PRED neg_rel,
            PHON.ONSET con ] ].

; 5-8-2021 change le
very := av_-_dg-very_le &
 [ ORTH < "very" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_very_x_deg_rel",
            PHON.ONSET con ] ].
            
sibei := av_-_dg-very_le &
"""
used as an intensifier (rude)
"""
 [ ORTH < "sibei" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sibei_x_deg_rel",
            PHON.ONSET con ] ].
;;;Nouns;;;

agaration_n1 := n_-_m_le &
"""
nominalised version of "agak"
"""
 [ ORTH < "agaration" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_agaration_n_1_rel",
            PHON.ONSET voc ] ].

ang-moh_n1 := n_-_c_le &
"""
literally: red hair (hokkien)
used to refer to Caucasians
"""
 [ ORTH < "ang","moh" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ang-moh_n_1_rel",
            PHON.ONSET voc ] ].

;that_test := cm_np-eg_that_le &
; [ ORTH < "thatt" >,
;   SYNSEM.PHON.ONSET con ].

singlish_n1 := n_-_pn-sg_le &
 [ ORTH < "Singlish" >,
   SYNSEM [ LKEYS.KEYREL.CARG "Singlish",
            PHON.ONSET con ] ].
            
one_pr-rel := n_-_pr-rel-one_le &
 [ ORTH < "onesg" >,
   SYNSEM.PHON.ONSET con ].
   
one_entity_n1 := n_poss_one_lexent &
  [ ORTH < "onesgg" >,
    SYNSEM [ ;LKEYS.KEYREL.PRED "_generic_entity_rel",
    	     PHON.ONSET con ] ].
    	    
;school_nsing := n_-_place-nomod_le &
; [ ORTH < "school" >,
;   SYNSEM [ LKEYS [ ALTKEYREL.PRED "place_n_rel",
;   		    KEYREL.PRED "_school_n_1_rel" ],
;            PHON.ONSET con ] ].

school_adv := n_-_ad-pl-nomod_le &
 [ ORTH < "school" >,
   SYNSEM [ LKEYS [ ALT2KEYREL.PRED _school_p_rel,
                    KEYREL.PRED place_n_rel ],
            PHON.ONSET con ] ].
            
market_adv := n_-_ad-pl-nomod_le &
 [ ORTH < "market" >,
   SYNSEM [ LKEYS [ ALT2KEYREL.PRED _market_p_rel,
                    KEYREL.PRED place_n_rel ],
            PHON.ONSET con ] ].
            
father_n1 := n_kinship-of_le &
 [ ORTH < "father" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_father_n_of_rel",
            PHON.ONSET con ] ].
            

; test         
;dir_adv1 := p_np_i-nnm_le &
; [ ORTH < "dir" >,
;   SYNSEM [ LKEYS.KEYREL.PRED dir_rel,
;            PHON.ONSET voc ] ].

;;;Particles;;;
sia_x_sfp := sfp_type2b_le &
 [ ORTH < "sia" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sia_particle_rel",
            PHON.ONSET con ] ].
            
meh-55-_x_sfp := sfp_qtype2b_le &
 [ ORTH < "meh" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_meh_particle_rel",
            PHON.ONSET con ] ].            

leh-21-_x_sfp := sfp_type2b_le &
 [ ORTH < "leh" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_leh_particle_rel",
            PHON.ONSET con ] ].
            
hah2_x_sfp := sfp_type1_le &
 [ ORTH < "hah" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hah2_particle_rel",
            PHON.ONSET con ] ].
            
hor2_x_sfp := sfp_qtype1_le &
 [ ORTH < "hor" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hor2_particle_rel",
            PHON.ONSET con ] ].            
           
ah2_x_sfp := sfp_type1_le &
"""
ah with a rising tone
"""
 [ ORTH < "ah" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ah2_particle_rel",
            PHON.ONSET con ] ].
            
lah4_x_sfp := sfp_type2a_le &
 [ ORTH < "lah" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lah4_particle_rel",
            PHON.ONSET con ] ]. 
            
what_x_sfp := sfp_type2a_le &
 [ ORTH < "what" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_what_particle_rel",
            PHON.ONSET con ] ].
            
one_x_sfp := sfp_type3_le &
 [ ORTH < "onesg" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_one_particle_rel",
            PHON.ONSET con ] ].  
            
isit_x_sfp := sfp_qtype2b_le &
 [ ORTH < "isit" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_isit_particle_rel",
            PHON.ONSET con ] ].                                           
            
anot_x_sfp := sfp_qtype2b_le &
 [ ORTH < "anot" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_anot_particle_rel",
            PHON.ONSET con ] ].                  
            
;;;Removed Items;;;
;already_adv3 := never_unify_le & [ ORTH < "_never_unify_" > ].

; CSY 2-12-2020 - remove ever_adv1 cos it occurs at the same places as ever_exp_adv, seems like an overgeneration
ever_adv1 := never_unify_le & [ ORTH < "_never_unify_" > ].
