;;;Verbs;;;

;;Transitive;;

arrow_v1 := v_np_le &
 [ ORTH < "arrow" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_arrow_v_1_rel",
            PHON.ONSET con ] ].

sabo_v1 := v_np_le &
 [ ORTH < "sabo" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sabo_v_1_rel",
            PHON.ONSET con ] ].

;;;Adverbials;;;

kaypo_a1 := aj_-_i_le &
 [ ORTH < "kaypo" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kaypo_a_1_rel",
            PHON.ONSET con ] ].

;agak_adv1 := av_-_dg-jo_le &
; [ ORTH < "agak" >,
;   SYNSEM [ LKEYS.KEYREL.PRED "_agak_rel",
;            PHON.ONSET con ] ].

agak_adv := av_-_i-vp_le &
 [ ORTH < "agak" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_agak_a_1_rel",
            PHON.ONSET con ] ].

already_prf_adv := av_-_already-prf_le &
 [ ORTH < "already" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_already_a_2_rel",
            PHON.ONSET con ] ].

already_incho_adv := av_-_already-incho_le &
 [ ORTH < "already" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_already_a_3_rel",
            PHON.ONSET con ] ].
; 17-11-2020 no need for this with the pred_adj_subj_lexrule
;beautiful_nocop := aj_nocop_i-prd_le &
; [ ORTH < "beautiful" >,
;   SYNSEM [ LKEYS.KEYREL.PRED "_beautiful_a_2_rel",
;            PHON.ONSET con ] ].

ever_exp_adv := av_-_ever-exp_le &
 [ ORTH < "ever" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ever_a_2_rel",
            PHON.ONSET con ] ].

not_prdp-sg := av_-_s-not-sg_le &
 [ ORTH < "not" >,
   SYNSEM [ LKEYS.KEYREL.PRED neg_rel,
            PHON.ONSET con ] ].

;;;Nouns;;;

agaration_n1 := n_-_m_le &
 [ ORTH < "agaration" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_agaration_n_1_rel",
            PHON.ONSET con ] ].


;removed items
already_adv3 := never_unify_le & [ ORTH < "_never_unify_" > ].
